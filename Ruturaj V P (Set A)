Unoptimized Queries:

1. select t.train_id, t.train_name from train t, scheduled_on s, route r, of_a_train o, coach c where t.train_id = s.train_id and s.r_id = r.r_id and (r.r_name = 'Goa - Mumbai' or r.r_name = 'Ajmer - Lonavala') and (o.coach_id = c.coach_id and o.train_id = t.train_id) and (datediff('2023-11-30', c.last_maintenance_date) >= 180) group by t.train_id order by count(c.coach_id)>((select count(c.coach_id) from coach c)/2);
2. select r.r_id, r.r_name, r.r_distance, r.r_time from passenger p, bought_by bb, ticket t, train tr, ticket_for tf, scheduled_on so, route r where (p.pg_id = bb.pg_id and month(bb.ticket_date) = 10 and (bb.ticket_id = t.ticket_id)) and (t.ticket_id = tf.ticket_id and tf.train_id = tr.train_id) and (tr.train_id = so.train_id and so.r_id = r.r_id) group by r.r_id, r.r_name, r.r_distance order by r.r_id desc;
3. select ta.agent_id, ta.agent_name, ta.agent_phone, ta.month, ta.commission from travel_agent ta, books b, ticket tk where (ta.agent_id = b.agent_id) and (b.ticket_id = tk.ticket_id and tk.ticket_status = 'Confirmed') and month(ta.month)=9 group by ta.agent_id, ta.agent_name, ta.agent_phone, ta.month, ta.commission order by count(tk.ticket_id)>1;
4. select r.r_id, r.r_name, r.r_distance, r.r_time from ticket t, ticket_for tf, train tr, scheduled_on so, route r where (t.ticket_type = 3) and (tf.ticket_id = t.ticket_id and tf.train_id = tr.train_id) and (so.train_id = tr.train_id and so.r_id = r.r_id) group by r.r_id, r.r_name, r.r_distance, r.r_time order by r_id;
5. select r.r_id, r.r_name, r.r_distance, r.r_time from train tr, train_on ton, station s, scheduled_on so, route r where (tr.train_id = ton.train_id and ton.station_id = s.station_id) and (tr.train_id = so.train_id and so.r_id = r.r_id) and time_to_sec(timediff(so.schedule_time, ton.arrival_time)) >= 0;
